{"version":3,"sources":["assets/images/diamondbacktv-logo-light.svg","assets/images/dbktv-logo-light.svg","api/firebase.js","components/atoms/Advertisement.jsx","components/atoms/Container.jsx","components/atoms/Heading.jsx","components/atoms/Icon.jsx","components/atoms/Image.jsx","components/atoms/Link.jsx","components/atoms/Paragraph.jsx","components/atoms/Video.jsx","components/molecules/Figure.jsx","components/molecules/Logo.jsx","components/molecules/Loading.jsx","components/organisms/Navigation.jsx","components/templates/Article.jsx","components/templates/Articles.jsx","components/templates/Default.jsx","components/templates/Multimedia.jsx","components/templates/News.jsx","components/templates/Slide.jsx","components/organisms/Deck.jsx","components/organisms/Footer.jsx","components/organisms/Header.jsx","components/organisms/Ticker.jsx","components/screens/Error.jsx","components/screens/Loading.jsx","components/App.jsx","config/sw.config.js","index.js"],"names":["module","exports","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","backend","core","firebase","decks","database","storage","Advertisement","props","adUnit","className","id","fetchNow","sizes","trim","Container","children","style","Heading","element","size","Icon","icon","spin","LoadingIcon","faSpinner","SquareIcon","faSquareFull","Image","alt","events","src","Link","href","target","text","Headline","feature","Related","Paragraph","dangerouslySetInnerHTML","__html","Author","author","Blurb","blurb","Category","category","Subheading","heading","Video","autoplay","controls","track","type","autoPlay","Figure","content","credit","media","related","video","caption","Logo","state","image","diamondback","plug","this","mini","dbk","Component","Loading","Navigation","container","mobile","c_props","Article","headline","Converter","makeHtml","Articles","subheading","document","title","ad","articles","map","article","i","class","key","dfpNetworkId","Default","Multimedia","$","css","addClass","removeClass","News","Slide","choose","component","data","template","toLowerCase","setState","start","duration","next","clearInterval","timer","setTimeout","window","location","pathname","replace","Deck","active","position","slides","current","push","resize","width","count","dispatched","paused","error","info","console","slide","to","isActive","exact","path","render","length","reduce","total","value","Footer","Header","Ticker","items","item","Error","name","message","App","stack","fetch","loading","subscribe","deck_id","subscriptions","on","snapshot","val","ticker","deck","a","sync","err","GeneralError","warn","once","NotFound","routing","patherize","tracking","analytics","env","search","ReactGA","initialize","pageview","debug","includes","process","ref","redirect","forEach","s","off","test","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9578aff3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diamondbacktv-logo-light.2b23953d.svg\";","module.exports = __webpack_public_path__ + \"static/media/dbktv-logo-light.0cbbb5c9.svg\";","// Packages\r\nimport * as firebase from 'firebase/app'\r\n\r\n// Firebase Modules\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\n/**\r\n * @file Firebase configuration\r\n * @module api/firebase\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n * @see {@link https://firebase.google.com/docs/web/setup}\r\n */\r\n\r\n/**\r\n * @property {object} config - Firebase web config\r\n * @property {string} config.apiKey - API key\r\n * @property {string} config.authDomain - Auth domain\r\n * @property {string} config.databaseURL - Default database url\r\n * @property {string} config.projectId - Project id\r\n * @property {string} config.storageBucket - Storage bucket url\r\n * @property {string} config.messagingSenderId - Messaging id\r\n * @property {string} config.appId - App id\r\n */\r\nconst config = {\r\n  apiKey: 'AIzaSyBOkrT_f_WhtkHQ2LfNk4zgerClCdP1SJQ',\r\n  authDomain: 'thedbktv.firebaseapp.com',\r\n  databaseURL: 'https://thedbktv.firebaseio.com',\r\n  projectId: 'thedbktv',\r\n  storageBucket: 'thedbktv.appspot.com',\r\n  messagingSenderId: '700606859987',\r\n  appId: '1:700606859987:web:91b3c2635f9bb934'\r\n}\r\n\r\nconst backend = {\r\n  core: firebase.initializeApp(config),\r\n  decks: firebase.initializeApp({\r\n    ...config, databaseURL: 'https://dbktv-decks.firebaseio.com'\r\n  }, 'decks')\r\n}\r\n\r\nconst database = {\r\n  core: firebase.database(),\r\n  decks: firebase.database(backend.decks)\r\n}\r\n\r\nconst storage = firebase.storage()\r\n\r\nexport { backend, database, storage }\r\n","// Packages\r\nimport React from 'react'\r\nimport { AdSlot } from 'react-dfp'\r\n\r\n/**\r\n * Renders an ad slot wrapped in a div with the base class 'ada-advertisment'.\r\n *\r\n * @todo Update documentation\r\n * @param {object} props - Component properties\r\n * @returns {HTMLDivElement}\r\n */\r\nconst Advertisement = props => {\r\n  const { adUnit, className, id, fetchNow, sizes } = props\r\n\r\n  return (\r\n    <div id={id} className={(`ada-advertisement ${className || ''}`).trim()}>\r\n      <AdSlot adUnit={adUnit} sizes={sizes} fetchNow={fetchNow} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Advertisement\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Component representing a container.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <div> element with the base class 'ada-container'.\r\n *\r\n * @returns {HTMLDivElement}\r\n */\r\nconst Container = props => {\r\n  const { children, className, id } = props\r\n  const style = (`ada-container ${className || ''}`).trim()\r\n\r\n  return <div id={id} className={style}>{children}</div>\r\n}\r\n\r\nexport default Container\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Component representing a <h1>, <h2>, <h3>, <h4>, <h5>, or <h6> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a heading element with the base class 'ada-heading'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {string} props.children - Inner HTML\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {string} props.id - Element id\r\n * @param {number} props.size - Heading size. Defaults to 1\r\n * @returns {Heading}\r\n */\r\nconst Heading = props => {\r\n  const { className, children, id, size } = props\r\n  const style = (`ada-heading ${className || ''}`).trim()\r\n\r\n  let element\r\n\r\n  switch (size) {\r\n    case 2:\r\n      element = <h2 className={style} id={id}>{children}</h2>\r\n      break\r\n    case 3:\r\n      element = <h3 className={style} id={id}>{children}</h3>\r\n      break\r\n    case 4:\r\n      element = <h4 className={style} id={id}>{children}</h4>\r\n      break\r\n    case 5:\r\n      element = <h5 className={style} id={id}>{children}</h5>\r\n      break\r\n    case 6:\r\n      element = <h6 className={style} id={id}>{children}</h6>\r\n      break\r\n    default:\r\n      element = <h1 className={style} id={id}>{children}</h1>\r\n      break\r\n  }\r\n\r\n  return element\r\n}\r\n\r\nexport default Heading\r\n","// Packages\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSpinner, faSquareFull } from '@fortawesome/free-solid-svg-icons'\r\n\r\n/**\r\n * @file Icon components\r\n * @todo Update documentation\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\nconst Icon = props => {\r\n  const { className, id, icon, spin } = props\r\n  const style = (`ada-icon ${className || ''}`).trim()\r\n\r\n  return <FontAwesomeIcon id={id} className={style} icon={icon} spin={spin} />\r\n}\r\n\r\nconst LoadingIcon = props => {\r\n  const { className, id, spin } = props\r\n  const style = (`loading ${className || ''}`).trim()\r\n\r\n  return <Icon id={id} className={style} icon={faSpinner} spin={spin} />\r\n}\r\n\r\nconst SquareIcon = props => {\r\n  const { className, id, spin } = props\r\n  const style = (`square ${className || ''}`).trim()\r\n\r\n  return <Icon id={id} className={style} icon={faSquareFull} spin={spin} />\r\n}\r\n\r\nexport { Icon as default, LoadingIcon, SquareIcon }\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Component representing an <img> element.\r\n * @todo Update documentation\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders an <img> element with the base class 'ada-image'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {string} props.alt - Image description\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {object} props.events - Event functions\r\n * @param {string} props.id - Element id\r\n * @param {string} props.src - Image url\r\n * @param {object | undefined} state - Component state\r\n * @param {object | undefined} context - Component context\r\n * @returns {HTMLImageElement}\r\n */\r\nconst Image = props => {\r\n  const { alt, className, events, id, src } = props\r\n  const style = (`ada-image ${className || ''}`).trim()\r\n\r\n  return <img id={id} className={style} src={src} alt={alt} {...events} />\r\n}\r\n\r\nexport default Image\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Component representing an <a> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders an anchor element with the base class 'ada-link'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {*} props.children - Child elements to render\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {string} props.id - Element id\r\n * @param {string} props.href - URL to navigate to\r\n * @param {string} props.target - Where to open the url\r\n * @param {string} props.text - Link text\r\n * @param {object | undefined} state - Component state\r\n * @param {object | undefined} context - Component context\r\n * @returns {HTMLAnchorElement}\r\n */\r\nconst Link = props => {\r\n  const { children, className, id, href, target, text } = props\r\n  const style = (`ada-link ${className || ''}`).trim()\r\n\r\n  return (\r\n    <a id={id} className={style} href={href} target={target}>\r\n      {text || children}\r\n    </a>\r\n  )\r\n}\r\n\r\n/**\r\n * Component representing an article headline.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.text - Article headline\r\n * @param {string} param0.href - Article link\r\n * @returns {<Headline>}\r\n */\r\nconst Headline = ({ text, href, feature }) => {\r\n  const style = `headline ${feature ? 'feature' : ''}`\r\n\r\n  return (\r\n    <Link className={style} href={href} target='_blank'>\r\n      {text}\r\n    </Link>\r\n  )\r\n}\r\n\r\n/**\r\n * Component representing a related article link.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.text - Article headline\r\n * @param {string} param0.href - Article link\r\n * @returns {<Headline>}\r\n */\r\nconst Related = ({ text, href }) => (\r\n  <Link className='related-article' href={href} target='_blank'>{text}</Link>\r\n)\r\n\r\nexport { Link as default, Headline, Related }\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Components representing an <p> elements.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a paragraph element with the base class 'ada-paragraph'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {*} props.children - Child elements to render\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {string} props.id - Element id\r\n * @param {object | undefined} state - Component state\r\n * @param {object | undefined} context - Component context\r\n * @returns {HTMLParagraphElement}\r\n */\r\nconst Paragraph = props => {\r\n  const { className, children, id } = props\r\n  const style = (`ada-paragraph ${className || ''}`).trim()\r\n\r\n  return (\r\n    <p\r\n      id={id} className={style} dangerouslySetInnerHTML={{\r\n        __html: children\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\n/**\r\n * Component representing an article author.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.author - Article author\r\n * @returns {<Paragraph>}\r\n */\r\nconst Author = ({ author }) => (\r\n  <Paragraph className='author'>{author}</Paragraph>\r\n)\r\n\r\n/**\r\n * Component representing an article blurb.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.blurb - Article blurb\r\n * @returns {<Paragraph>}\r\n */\r\nconst Blurb = ({ blurb }) => (\r\n  <Paragraph className='blurb'>{blurb}</Paragraph>\r\n)\r\n\r\n/**\r\n * Component representing an article category.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.category - Article category\r\n * @returns {<Paragraph>}\r\n */\r\nconst Category = ({ category }) => (\r\n  <Paragraph className='category'>{category}</Paragraph>\r\n)\r\n\r\n/**\r\n * Component representing a subheading.\r\n *\r\n * @param {object} param0 - Component properties\r\n * @param {string} param0.headline - Subheading\r\n * @returns {<Paragraph>}\r\n */\r\nconst Subheading = ({ heading }) => (\r\n  <Paragraph className='subheading'>{heading}</Paragraph>\r\n)\r\n\r\nexport { Paragraph as default, Author, Blurb, Category, Subheading }\r\n","// Packages\r\nimport React from 'react'\r\n\r\n/**\r\n * @file Component representing a <video> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders an <video> element with the base class 'ada-video'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {string} props.controls - True if controls should be displayed\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {object} props.events - Event functions\r\n * @param {string} props.id - Element id\r\n * @param {string} props.src - Video source URL\r\n * @param {object} props.track - Video subtitle track\r\n * @param {string} props.type - Video source type\r\n * @param {object} state - Component state\r\n * @param {object | undefined} context - Component context\r\n * @returns {HTMLVideoElement}\r\n */\r\nconst Video = props => {\r\n  const { autoplay, controls, className, events, id, src, track, type } = props\r\n  const style = (`ada-video ${className || ''}`).trim()\r\n\r\n  // Receiving the following ESLint error: \"Media elements such as <audio> and\r\n  // <video> must have a <track> for captions.\"\r\n  // To reproduce, remove the comment below that disables the rule.\r\n\r\n  /* eslint-disable jsx-a11y/media-has-caption */\r\n\r\n  return (\r\n    <div id={id} className={(`ada-video ${className || ''}`).trim()}>\r\n      <video\r\n        className={style}\r\n        autoPlay={autoplay || false} controls={controls || false} {...events}\r\n      >\r\n        <source src={src} type={type} />\r\n        {track ? <track {...track} /> : null}\r\n      </video>\r\n    </div>\r\n\r\n  )\r\n\r\n  /* eslint-enable jsx-a11y/media-has-caption */\r\n}\r\n\r\nexport default Video\r\n","// Packages\r\nimport React from 'react'\r\n\r\n// Components\r\nimport {\r\n  Author, Category, Container, Image, Headline, Related, Video\r\n} from '../atoms'\r\n\r\n/**\r\n * @file Component representing a <figure> element.\r\n * @todo Update documentation\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <figure> element with the base class 'adm-figcaption'.\r\n *\r\n * @param {object} props\r\n * @returns {HTMLElement}\r\n */\r\nconst Figure = props => {\r\n  const { className, content, id } = props\r\n\r\n  const { category, credit, media, related } = content\r\n\r\n  return (\r\n    <figure id={id} className={`adm-figure ${className || ''}`.trim()}>\r\n      {media.video ? <Video autoplay {...media} /> : <Image {...media} />}\r\n      <figcaption className='ada-figcaption'>\r\n        <Container>\r\n          <div className='caption-header'>\r\n            <Category category={category} />\r\n            <Author author={credit} />\r\n          </div>\r\n          <Headline\r\n            href={media.src} text={media.video ? media.caption : media.alt}\r\n          />\r\n          {related ? <Related {...related} target='_blank' /> : null}\r\n        </Container>\r\n      </figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","// Packages\r\nimport React, { Component } from 'react'\r\n\r\n// Components\r\nimport { Heading, Image, Link } from '../atoms'\r\n\r\n// Assets\r\nimport diamondback from '../../assets/images/diamondbacktv-logo-light.svg'\r\nimport dbk from '../../assets/images/dbktv-logo-light.svg'\r\n\r\n/**\r\n * Class representing the Diamondback TV logo.\r\n *\r\n * @class Logo\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Logo extends Component {\r\n  /**\r\n   * Creates a new Logo component.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @param {string} props.className - Space delimitted list of extra classes\r\n   * @param {string} props.id - Element id\r\n   * @param {boolean} props.mini - If true, returns DBKTV logo instead of the\r\n   * DiamondbackTV logo\r\n   * @param {boolean} props.plug - If true, display 'Continue reading on\r\n   * dbknews.com' beneath the logo\r\n   * @returns {Logo}\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    /**\r\n     * @property {object} state - Component state\r\n     * @property {object} state.image - Logo image properties\r\n     * @property {string} state.image.alt - Logo description\r\n     * @property {svg} state.image.src - Logo\r\n     * @property {boolean} state.plug - @see props.mini = F, @see props.plug = T\r\n     */\r\n    this.state = {\r\n      image: { alt: 'DiamondbackTV logo', src: diamondback }, plug: false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * getDerivedStateFromProps is invoked right before calling the render method,\r\n   * both on the initial mount and on subsequent updates. It should return an\r\n   * object to update the state, or null to update nothing.\r\n   *\r\n   * This functions determines if the DiamondbackTV logo or the DBKTV logo\r\n   * should be rendered. If rendering the DiamondbackTV logo, 'Continue reading\r\n   * on dbknews.com' can be rendered underneath the logo as well.\r\n   *\r\n   * @param {object} props - @see Logo#constructor\r\n   * @param {object} state - @see Logo#constructor\r\n   * @returns {object} Object to update component state\r\n   */\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { mini, plug } = props\r\n\r\n    state.plug = !mini && plug\r\n    if (mini) state.image = { alt: 'DBKTV logo', src: dbk }\r\n\r\n    return state\r\n  }\r\n\r\n  /**\r\n   * Renders the DiamondbackTV logo or the DBKTV logo.\r\n   * If rendering the DiamondbackTV logo, 'Continue reading on dbknews.com' can\r\n   * be rendered underneath the logo as well.\r\n   *\r\n   * @returns {HTMLDivElement}\r\n   */\r\n  render() {\r\n    const { className, id } = this.props\r\n    const { image, plug } = this.state\r\n\r\n    return (\r\n      <div id={id} className={(`adm-logo ${className || ''}`).trim()}>\r\n        <Image {...image} />\r\n        {\r\n          plug\r\n            ? (\r\n              <Heading size={2}>\r\n                Continue reading on&nbsp;\r\n                <Link href='https://dbknews.com' target='_blank'>\r\n                  dbknews.com\r\n                </Link>\r\n              </Heading>\r\n            )\r\n            : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React from 'react'\r\n\r\n// Components\r\nimport { LoadingIcon } from '../atoms'\r\nimport Logo from './Logo'\r\n\r\n/**\r\n * @file Component representing a loading section.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <div> element representing a loading section.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {object} state - Component state\r\n * @returns {HTMLDivElement} <main> element\r\n */\r\nconst Loading = props => {\r\n  const { className, id } = props\r\n\r\n  return (\r\n    <div id={id} className={(`adm-loading ${className || ''}`).trim()}>\r\n      <Logo plug />\r\n      <LoadingIcon spin />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","// Packages\r\nimport React from 'react'\r\n\r\n// Components\r\nimport { Container } from '../atoms'\r\n\r\n/**\r\n * @file Component representing a <nav> element.\r\n * @todo Update documentation\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <nav> element with the base class 'ado-nav'.\r\n *\r\n * If props.container is defined, props.children will be wrapped in a\r\n * container element with the base class 'ada-container'.\r\n *\r\n * Pass an empty object for the default container, or defined\r\n * props.container.id and/or props.container.classes for greater control.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {*} props.children - Header elements\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {object} props.container - If defined, wrap children in container\r\n * @param {string} props.container.id - Container element id\r\n * @param {string} props.container.classes - Extra container classes\r\n * @param {string} props.id - Element id\r\n * @param {object} state - Component state\r\n * @returns {HTMLElement} HTML <nav> element\r\n */\r\nconst Navigation = props => {\r\n  const { id, children, container, mobile } = props\r\n\r\n  const style = `ado-nav ${props.className || ''} ${mobile ? 'ui-mobile' : ''}`\r\n\r\n  const c_props = typeof container === 'boolean'\r\n    ? { children } : { ...container, children }\r\n\r\n  return (\r\n    <nav id={id} className={style.trim()}>\r\n      {container ? <Container {...c_props} /> : children}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","// Packages\r\nimport React from 'react'\r\nimport { Converter } from 'showdown'\r\n\r\n// Components\r\nimport { Author, Blurb, Category, Headline } from '../atoms'\r\n\r\n/**\r\n * @file Component representing an <article> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders an article with the base class 'adt-article'.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {object} state - Component state\r\n * @param {object} context - Component context\r\n * @returns {HTMLElement} <article> element\r\n */\r\nconst Article = props => {\r\n  const { author, blurb, category, className, headline, feature, id } = props\r\n  const style = `adt-article ${className || ''} ${feature ? ' feature' : ''}`\r\n\r\n  const convert = text => (new Converter()).makeHtml(text)\r\n\r\n  return (\r\n    <article id={id} className={style.trim()}>\r\n      <div className='article-header'>\r\n        <Category category={category} />\r\n        <Author author={author} />\r\n      </div>\r\n      <Headline feature={feature} {...headline} />\r\n      <Blurb blurb={convert(blurb)} />\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Article\r\n","// Packages\r\nimport React, { Component } from 'react'\r\nimport { DFPSlotsProvider } from 'react-dfp'\r\n\r\n// Components\r\nimport { Advertisement, Container, Subheading } from '../atoms'\r\nimport Article from './Article'\r\n\r\n/**\r\n * Component representing the \"Top News\" template.\r\n * This template should be used to display two articles and an advertisment.\r\n *\r\n * @class Articles\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Articles extends Component {\r\n  subheading = 'Continue Reading on <a class=\"ada-link\" href=\"https://dbknews.com\" target=\"_blank\">dbknews.com</a>'\r\n\r\n  /**\r\n   * After the component has mounted, the document title will be updated.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    document.title = `Continue reading on dbknews.com`\r\n  }\r\n\r\n  /**\r\n   * Renders a <section> element representing the \"Articles\" template.\r\n   *\r\n   * @returns {HTMLElement} <section> element\r\n   */\r\n  render() {\r\n    const { className, content, id } = this.props\r\n    const style = (`adt-articles ${className || ''}`).trim()\r\n\r\n    const NETWORK_ID = '123934970'\r\n    const ad = { adUnit: content.ad, fetchNow: true, sizes: [[300, 600]] }\r\n\r\n    return (\r\n      <div id={id} className={style}>\r\n        <Container>\r\n          <div className='left-rail'>\r\n            <Subheading heading={this.subheading} />\r\n            <div className='articles'>\r\n              {content.articles.map((article, i) => {\r\n                return <Article {...article} class='group' key={`a-${i}`} />\r\n              })}\r\n            </div>\r\n\r\n            <div className='ado-social'>\r\n              {/* TODO: Get icon license */}\r\n            </div>\r\n          </div>\r\n          <div className='right-rail'>\r\n            <DFPSlotsProvider dfpNetworkId={NETWORK_ID}>\r\n              {ad.adUnit ? <Advertisement {...ad} /> : null}\r\n            </DFPSlotsProvider>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\n\r\n// Components\r\nimport { Container } from '../atoms'\r\nimport { Logo } from '../molecules'\r\n\r\n/**\r\n * Component representing the default slide.\r\n *\r\n * @class Default\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Default extends Component {\r\n  /**\r\n   * After the component has mounted, the window title will be updated.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    document.title = `Continue reading on dbknews.com`\r\n  }\r\n\r\n  /**\r\n   * Renders a <div> element representing the default slide.\r\n   *\r\n   * The default slide displays the DiamondbackTV logo and 'Continue reading\r\n   * on dbknews.com' beneath the logo.\r\n   *\r\n   * @returns {HTMLDivElement} <div class='adt-default'>\r\n   */\r\n  render() {\r\n    const { className, id } = this.props\r\n\r\n    return (\r\n      <div id={id} className={`adt-default ${className || ''}`.trim()}>\r\n        <Container>\r\n          <Logo plug />\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\nimport $ from 'jquery'\r\n\r\n// Components\r\nimport { Figure } from '../molecules'\r\n\r\n/**\r\n * Class representing the Multimedia template.\r\n * This template should be used to display an image or video.\r\n *\r\n * @class Multimedia\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Multimedia extends Component {\r\n  /**\r\n   * After the component has mounted, the document title and ui will be updated.\r\n   * The footer will have a border applied.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    const { content } = this.props\r\n    const { media } = content\r\n\r\n    document.title = `Gallery: ${media.video ? media.caption : media.alt}`\r\n\r\n    $('.ado-deck').css('height', '92.5%')\r\n    $('.ado-footer').addClass('multimedia-border')\r\n    // $('.ado-nav').addClass('ui-hide')\r\n  }\r\n\r\n  /**\r\n   * Before the component unmounts, the ui will be reset to its default state.\r\n   * The footer border will be removed.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentWillUnmount() {\r\n    $('.ado-deck').css('height', '100%')\r\n    $('.ado-footer').removeClass('multimedia-border')\r\n    // $('.ado-nav').removeClass('ui-hide')\r\n  }\r\n\r\n  /**\r\n   * Renders a <section> element representing the \"Multimedia\" template.\r\n   *\r\n   * @todo Update documentation\r\n   * @returns {HTMLElement} <section> element\r\n   */\r\n  render() {\r\n    const { className, content, id } = this.props\r\n\r\n    return (\r\n      <div id={id} className={`adt-multimedia ${className || ''}`.trim()}>\r\n        <Figure content={content} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\nimport $ from 'jquery'\r\n\r\n// Components\r\nimport Article from './Article'\r\n\r\n/**\r\n * Component representing the \"Top News\" template.\r\n * This template should be used to display a feature article.\r\n *\r\n * @class News\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class News extends Component {\r\n  /**\r\n   * After the component has mounted, the document title and deck background\r\n   * image will be updated.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    const { content } = this.props\r\n    const { headline, image } = content\r\n\r\n    document.title = `Top News: ${headline.text}`\r\n    $('.ado-deck').css('background-image', `url(${image.src})`)\r\n  }\r\n\r\n  /**\r\n   * Before the component unmounts, the deck background image will be removed\r\n   * and the @see @class Deck timer will be stopped.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentWillUnmount() {\r\n    $('.ado-deck').css('background-image', 'none')\r\n  }\r\n\r\n  /**\r\n   * Renders a <section> element representing the \"Top News\" template.\r\n   *\r\n   * @todo Update documentation\r\n   * @returns {HTMLElement} <section> element\r\n   */\r\n  render() {\r\n    const { className, content, id } = this.props\r\n\r\n    return (\r\n      <div id={id} className={`adt-news ${className || ''}`.trim()}>\r\n        <Article category='top news' {...content} feature />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\n\r\n// Components\r\nimport { Articles, Default, Multimedia, News } from '.'\r\n\r\n/**\r\n * @file Component representing a deck slide.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Slide extends Component {\r\n  /**\r\n   * Creates a new deck slide.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @returns {slide}\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    /**\r\n    * @property {object} state - Internal component state\r\n    * @property {object | null} state.data - Slide data\r\n    * @property {Component | null} state.template - Template component\r\n     * @property {string | null} state.type - Name of template component in\r\n     * lowercase\r\n    * @instance\r\n    */\r\n    this.state = { data: null, template: null, type: null }\r\n\r\n    /**\r\n     * @property {string} timer - Interval id of current slide timer\r\n     * @instance\r\n     */\r\n    this.timer = ''\r\n  }\r\n\r\n  /**\r\n   * After the component has mounted, the internal state will be updated with\r\n   * the name of the current template component, the template to render, and the\r\n   * data associated with it.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    this.choose()\r\n    // this.start(true)\r\n  }\r\n\r\n  /**\r\n   * Clears the slide timer\r\n   */\r\n  componentWillUnmount() {\r\n    this.start(false)\r\n  }\r\n\r\n  /**\r\n   * Renders <section> element with the base class 'adt-slide'.\r\n   *\r\n   * @todo Update documentation\r\n   * @returns {HTMLElement}\r\n   */\r\n  render() {\r\n    const { className, id } = this.props\r\n    const { template, type } = this.state\r\n    const style = `adt-slide ${type} ${className || ''}`\r\n\r\n    if (type) style.replace('adt-slide', `adt-slide ${type}`)\r\n\r\n    return (\r\n      <section id={id} className={style.trim()}>\r\n        {template}\r\n      </section>\r\n    )\r\n  }\r\n\r\n  // Helpers\r\n\r\n  /**\r\n   * Based on the current component properties, the method updates the internal\r\n   * state with the name of the component in lowercase and the template\r\n   * component to be rendered.\r\n   *\r\n   * @returns {string} Name of component in lowercase\r\n   */\r\n  choose = () => {\r\n    const { className, component, id, ...data } = this.props\r\n\r\n    let template = null\r\n\r\n    if (component === 'Articles') {\r\n      template = <Articles {...data} />\r\n    } else if (component === 'Multimedia') {\r\n      template = <Multimedia {...data} />\r\n    } else if (component === 'News') {\r\n      template = <News {...data} />\r\n    } else {\r\n      template = <Default />\r\n    }\r\n\r\n    const state = { data, template, type: component.toLowerCase() }\r\n    return this.setState(state, () => {\r\n      return state.type\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Starts the slide timer if @see @param start is true. Otherwise, the\r\n   * interval will be cleared.\r\n   *\r\n   * @param {boolean} start - True to start timer. False to clear interval\r\n   * @returns {string | undefined}\r\n   */\r\n  start = start => {\r\n    const { duration, next } = this.props\r\n\r\n    if (start) {\r\n      this.timer = setTimeout(() => {\r\n        window.location.pathname = next\r\n      }, process.env.NODE_ENV === 'development' ? 5000 : duration)\r\n    } else {\r\n      return clearInterval(this.timer)\r\n    }\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component, Fragment } from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport $ from 'jquery'\r\n\r\n// Components\r\nimport Navigation from './Navigation'\r\nimport { SquareIcon } from '../atoms'\r\nimport { Slide } from '../templates'\r\n\r\n/**\r\n * Component representing the slide deck\r\n *\r\n * @class Deck\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Deck extends Component {\r\n  /**\r\n   * Creates a new slide deck.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @param {Function} props.error - Error handling function\r\n   * @param {Function} props.fetch - Load handling function\r\n   * @param {string} props.id - Id of current deck\r\n   * @returns {Deck}\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    /**\r\n     * @property {object} state - Internal component state\r\n     * @property {number} state.count - Total # of slides in deck\r\n     * @property {boolean} state.dispatched - True if slide was rendered\r\n     * @property {number} state.duration - Deck duration in ms\r\n     * @property {boolean} state.mobile - True if viewport width <= 768px\r\n     * @property {boolean} state.paused - True if deck is paused\r\n     * @property {number} state.position - ID of current slide. Defaults to -1\r\n     * @property {object[]} state.slides - Slide content\r\n     * @instance\r\n     */\r\n    this.state = {\r\n      count: 0,\r\n      dispatched: false,\r\n      duration: 0,\r\n      mobile: false,\r\n      paused: false,\r\n      position: 0,\r\n      slides: null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sanitizes the incoming deck data.\r\n   *\r\n   * @todo Update documentation\r\n   *\r\n   * @param {object} props - Incoming props\r\n   * @param {object} state - Component state\r\n   * @returns {object | null} Object to update the state, or null to update\r\n   * nothing\r\n   */\r\n  static getDerivedStateFromProps(props, state) {\r\n    const { slides } = props\r\n\r\n    const count = slides.length\r\n    const durations = slides.map(slide => slide.duration)\r\n\r\n    return {\r\n      duration: durations.reduce((total, value) => total + value),\r\n      count,\r\n      position: 0,\r\n      slides: slides.map((slide, i) => {\r\n        slide.id = `/slides/${i + 1}`\r\n        slide.next = i === count - 1 ? `/slides/1` : `/slides/${i + 2}`\r\n        slide.position = i\r\n        return slide\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    return this.props.error(error, info)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.info('Deck mounted.')\r\n\r\n    // Update internal mobile state and attach window listener to update it\r\n    this.resize()\r\n    $(window).resize(this.resize())\r\n  }\r\n\r\n  /**\r\n   * Renders a <main> element with the id 'deck' and the class name 'ado-deck'.\r\n   * Inside the container, the Navigation and Ticker will be rendered as well.\r\n   *\r\n   * @returns {HTMLElement} <main id='deck' class='ado-deck'>\r\n   */\r\n  render() {\r\n    const { mobile, slides } = this.state\r\n\r\n    return (\r\n      <Fragment>\r\n        <Navigation mobile={mobile}>\r\n          {slides.map((slide, i) => {\r\n            return (\r\n              <NavLink\r\n                to={slide.id} key={`nav-btn-${i}`}\r\n                className='ada-link' isActive={() => this.active(i)}\r\n              >\r\n                <SquareIcon />\r\n              </NavLink>\r\n            )\r\n          })}\r\n        </Navigation>\r\n        <main id='deck' className='ado-deck'>\r\n          {slides.map((slide, i) => {\r\n            return (\r\n              <Route\r\n                exact={i === 0} key={slide.id} path={slide.id}\r\n                render={props =>\r\n                  <Slide {...props} {...slide} push={this.push} />}\r\n              />\r\n            )\r\n          })}\r\n        </main>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  // HELPERS\r\n\r\n  /**\r\n   * Returns true if the window path matches the path of the current slide.\r\n   *\r\n   * @param {number} position - Position of slide\r\n   * @returns {boolean}\r\n   */\r\n  active = position => {\r\n    const { slides } = this.state\r\n    return window.location.pathname === slides[position].id\r\n  }\r\n\r\n  /**\r\n   * Returns the data for the current slide.\r\n   *\r\n   * @returns {object | null} - Data for current slide\r\n   */\r\n  current = () => {\r\n    const { position, slides } = this.state\r\n    return slides ? slides[position] : null\r\n  }\r\n\r\n  /**\r\n   * Updates the internal deck position state.\r\n   *\r\n   * @param {number} position - Position of current slide\r\n   * @returns {number} @see @param position\r\n   */\r\n  push = position => this.setState({ position }, () => position)\r\n\r\n  /**\r\n   * Updates the internal mobile state.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  resize = () => this.setState({ mobile: $(window).width() <= 768 })\r\n}\r\n","// Packages\r\nimport React from 'react'\r\n\r\n// Components\r\nimport { Container } from '../atoms'\r\n\r\n/**\r\n * @file Component representing a <footer> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <footer> element with the base class 'ado-footer'.\r\n *\r\n * If props.container is defined, props.children will be wrapped in a\r\n * container element with the base class 'ada-container'.\r\n *\r\n * Pass an empty object for the default container, or defined\r\n * props.container.id and/or props.container.classes for greater control.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {*} props.children - Footer elements\r\n * @param {string} props.className - Space delimitted list of extra classes\r\n * @param {object} props.container - If defined, wrap children in container\r\n * @param {string} props.container.id - Container element id\r\n * @param {string} props.container.classes - Extra container classes\r\n * @param {string} props.id - Element id\r\n * @param {object} state - Component state\r\n * @returns {HTMLElement} HTML <footer> element.\r\n */\r\nconst Footer = props => {\r\n  const { children, container, className, id } = props\r\n\r\n  const c_props = typeof container === 'boolean'\r\n    ? { children } : { ...container, children }\r\n\r\n  return (\r\n    <footer id={id} className={(`ado-footer ${className || ''}`).trim()}>\r\n      {\r\n        container\r\n          ? <Container {...c_props} />\r\n          : children\r\n      }\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// Packages\r\nimport React from 'react'\r\n\r\n// Components\r\nimport { Container } from '../atoms'\r\n\r\n/**\r\n * @file Component representing a <header> element.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <header> element with the base class 'ado-header'.\r\n *\r\n * If props.container is defined, props.children will be wrapped in a\r\n * container element with the base class 'ada-container'.\r\n *\r\n * Pass an empty object for the default container, or defined\r\n * props.container.id and/or props.container.classes for greater control.\r\n *\r\n * @param {object} props - Component properties\r\n * @param {*} props.children - Header elements\r\n * @param {string} props.class - Space delimitted list of extra classes\r\n * @param {object} props.container - If defined, wrap children in container\r\n * @param {string} props.container.id - Container element id\r\n * @param {string} props.container.classes - Extra container classes\r\n * @param {string} props.id - Element id\r\n * @param {object} state - Component state\r\n * @returns {HTMLElement} HTML <header> element\r\n */\r\nconst Header = props => {\r\n  const { id, children, container } = props\r\n\r\n  const c_props = typeof container === 'boolean'\r\n    ? { children } : { ...container, children }\r\n\r\n  return (\r\n    <header id={id} className={(`ado-header ${props.class || ''}`).trim()}>\r\n      {container ? <Container {...c_props} /> : children}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","// Packages\r\nimport React, { Fragment } from 'react'\r\nimport $ from 'jquery'\r\n\r\n// Components\r\nimport { Link, SquareIcon } from '../atoms'\r\n\r\n/**\r\n * @file Component representing a news ticker.\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n/**\r\n * Renders a <div> element with the base class 'ado-ticker'.\r\n *\r\n * @todo Update documentation\r\n *\r\n * @param {object} props - Component properties\r\n * @param {object} props.items - Ticker content\r\n * @param {object | undefined} state\r\n */\r\nconst Ticker = props => {\r\n  const { className, id, items } = props\r\n\r\n  $('.ado-ticker > .items').css('animation-duration', `${items.length * 5}s`)\r\n\r\n  return (\r\n    <div id={id} className={(`ado-ticker ${className || ''}`).trim()}>\r\n      <div className='items'>\r\n        {items.map((item, i) => {\r\n          const id = `ticker-item-${i}`\r\n\r\n          return (\r\n            <div className='ticker-item' id={id} key={id}>\r\n              {\r\n                i === items.length - 1\r\n                  ? <Link {...item} />\r\n                  : <Fragment><Link {...item} /><SquareIcon /></Fragment>\r\n              }\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ticker\r\n","// Packages\r\nimport React, { Component } from 'react'\r\n\r\n// Components\r\nimport { Container, Heading } from '../atoms'\r\n\r\n/**\r\n * Class representing an error screen.\r\n *\r\n * @todo Transform all errors to FeathersError via getDerivedStateFromProps\r\n *\r\n * @class Error\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Error extends Component {\r\n  /**\r\n   * Creates a new Error screen component.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @param {FeathersError} props.error - Current error\r\n   * @param {string} props.error.message - Current error message\r\n   * @param {object} props.info - Error info\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {}\r\n  }\r\n\r\n  /**\r\n   * Sets the error name as the document title.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    const { error } = this.props\r\n    document.title = `${error.name}: ${error.message}`\r\n  }\r\n\r\n  /**\r\n   * Renders a <main> element representing an error screen.\r\n   * The page will display the error name, message, and stack information.\r\n   *\r\n   * @returns {HTMLElement} <main> element\r\n   */\r\n  render() {\r\n    const { className, error, id, info } = this.props\r\n    const style = (`ads-error ${error.className} ${className || ''}`).trim()\r\n\r\n    return (\r\n      <main id={id} className={style}>\r\n        <Container>\r\n          <Heading>Sorry, there was an error.</Heading>\r\n          <code><span>{error.name}</span>&nbsp;{error.message}</code>\r\n          <code>{info}</code>\r\n        </Container>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\n\r\n// Components\r\nimport { Container } from '../atoms'\r\nimport { Loading as LoadingMolecule } from '../molecules'\r\n\r\n/**\r\n * Class representing the loading screen.\r\n *\r\n * @todo Update documentation\r\n *\r\n * @class Loading\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class Loading extends Component {\r\n  /**\r\n   * Updates the document title.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentDidMount() {\r\n    document.title = 'Loading DiamondbackTV'\r\n  }\r\n\r\n  /**\r\n   * Renders a <main> element representing the loading screen. Displays the\r\n   * DiamondbackTV logo, the dbknews.com plug, and a loading spinner.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @param {object} state - Component state\r\n   * @returns {HTMLElement} <main> element\r\n   */\r\n  render() {\r\n    const { className, id } = this.props\r\n\r\n    return (\r\n      <main id={id} className={(`ads-loading ${className || ''}`).trim()}>\r\n        <Container>\r\n          <LoadingMolecule />\r\n        </Container>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n","// Packages\r\nimport React, { Component } from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { GeneralError, NotFound } from '@feathersjs/errors'\r\n\r\n// Components\r\nimport { Logo } from './molecules'\r\nimport { Header, Deck, Footer, Ticker } from './organisms'\r\nimport { Error, Loading } from './screens'\r\n\r\n/**\r\n * Class representing the web application.\r\n *\r\n * @class App\r\n * @extends Component\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\nexport default class App extends Component {\r\n  /**\r\n   * Creates a new Diamondback TV web application.\r\n   *\r\n   * @param {object} props - Component properties\r\n   * @returns {App}\r\n   */\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { NODE_ENV } = process.env\r\n\r\n    /**\r\n     * @todo Get tracking id\r\n     *\r\n     * @property {*[]} analytics - Google Analytics configuration options\r\n     * @property {string} analytics[0] - Google Analytics tracking id\r\n     * @property {object} analytics[1] - Additional config options\r\n     * @instance\r\n     */\r\n    this.analytics = ['', { debug: ['development', 'test'].includes(NODE_ENV) }]\r\n\r\n    /**\r\n     * @property {string} env - development | test | staging | production\r\n     * @instance\r\n     */\r\n    this.env = NODE_ENV\r\n\r\n    /**\r\n     * @property {object} state - Internal component state\r\n     * @property {boolean} state.analytics - True if Google Analytics was\r\n     * initialized; this value will be updated in a production Node environment\r\n     * @property {string | null} state.deck - Id of current deck\r\n     * @property {FeathersError | null} state.error - Current error\r\n     * @property {object} state.info - Error information\r\n     * @property {boolean} state.loading - True if fetching content\r\n     * @property {object[] | null} state.slides - Slide content\r\n     * @property {object[] | null} state.ticker - Ticker content\r\n     * @instance\r\n     */\r\n    this.state = {\r\n      analytics: false,\r\n      deck: null,\r\n      error: null,\r\n      info: null,\r\n      loading: true,\r\n      slides: null,\r\n      ticker: null\r\n    }\r\n\r\n    /**\r\n     * @property {object} subscriptions - Database subscriptions\r\n     * @property {firebase.database.Reference | null} subscriptions.deck - Ref\r\n     * to deck to watch for changes\r\n     * @property {firebase.database.Reference} subscriptions.id - Ref to id of\r\n     * deck to watch for changes\r\n     * @instance\r\n     */\r\n    this.subscriptions = {\r\n      current: null,\r\n      data: id => props.database.decks.ref(id),\r\n      id: props.database.core.ref('current')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * In a 'development' Node environment where @see @param props.test is true,\r\n   * or in a 'test' Node environment, the internal component state can be set\r\n   * via @see @param props .\r\n   *\r\n   * @todo Update documentation\r\n   *\r\n   * @param {object} props - Incoming props\r\n   * @param {object} state - Component state\r\n   * @returns {object | null} Object to update the state, or null to update\r\n   * nothing\r\n   */\r\n  static getDerivedStateFromProps(props, state) {\r\n    const {\r\n      database, deck, error, info, loading, mobile, slides, test, ticker\r\n    } = props\r\n\r\n    const { NODE_ENV } = process.env\r\n\r\n    if ((NODE_ENV === 'development' && test) || NODE_ENV === 'test') {\r\n      return {\r\n        database, deck, error, info, loading, mobile, slides, test, ticker\r\n      }\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * If an error is caught, the component's internal error state will be\r\n   * updated. Afterwards, the error will be logged with the prefix '!TV-ERR =>'.\r\n   *\r\n   * @param {Error | FeathersError} error - Current error\r\n   * @param {object} info - Error information\r\n   * @returns {undefined}\r\n   */\r\n  componentDidCatch(error, info) {\r\n    this.error(error, info)\r\n  }\r\n\r\n  /**\r\n   * Retreieves the id of the current deck and updates the internal state. The\r\n   * application will subscribes to changes at the database node 'current'. The\r\n   * value of this node contains the id name of the current deck.\r\n   *\r\n   * In a 'production' Node environment, Google Analytics and Pageview tracking\r\n   * will be initialized.\r\n   *\r\n   * @async\r\n   * @returns {undefined}\r\n   * @throws {GeneralError | NotFound}\r\n   */\r\n  async componentDidMount() {\r\n    console.info('Application mounted.')\r\n\r\n    // Redirect if necessary\r\n    const { pathname } = window.location\r\n    const redirect = ['/', '/slides']\r\n\r\n    if (this.env === 'development' && redirect.includes(pathname)) {\r\n      window.location.pathname = '/slides/1'\r\n    }\r\n\r\n    // Get the current deck id and subscribe to data changes\r\n    await this.sync()\r\n    this.subscribe()\r\n\r\n    // Google Analytics and Pageview tracking\r\n    this.tracking()\r\n  }\r\n\r\n  /**\r\n   * Before the component unmounts, our deck subscriptions will be removed.\r\n   *\r\n   * @returns {undefined}\r\n   */\r\n  componentWillUnmount() {\r\n    const { current, id } = this.subscriptions\r\n    const subscriptions = [current, id]\r\n\r\n    subscriptions.forEach(s => { if (s) s.off() })\r\n  }\r\n\r\n  /**\r\n   * Returns the web application.\r\n   *\r\n   * If an error is caught, the Error screen component will be rendered,\r\n   * displaying the error name, message, and stack information.\r\n   *\r\n   * While the application is loading, the Loading screen component will be\r\n   * rendered, displaying the DiamondbackTV logo with 'Continuing reading on\r\n   * dbknews.com' below it.\r\n   *\r\n   * After the application has finished loading, the Header, Deck, Footer, and\r\n   * child components will be rendered.\r\n   *\r\n   * @returns {<Router/>}\r\n   */\r\n  render() {\r\n    const { deck, error, info, loading, slides, ticker } = this.state\r\n\r\n    // Handle error and loading states\r\n    if (error) return <Error error={error} info={info} />\r\n    if (loading) return <Loading />\r\n\r\n    return (\r\n      <Router>\r\n        <Header container>\r\n          <Logo />\r\n        </Header>\r\n        <Deck\r\n          error={this.error} fetch={this.fetch} id={deck} slides={slides}\r\n        />\r\n        <Footer>\r\n          <Logo mini />\r\n          <Ticker items={ticker} />\r\n        </Footer>\r\n      </Router>\r\n    )\r\n  }\r\n\r\n  // HELPERS\r\n\r\n  /**\r\n   * Logs the error and updates the internal error state.\r\n   *\r\n   * @param {FeathersError | Error} error - Exception that was thrown\r\n   * @param {object} info - Error infomation\r\n   * @returns {undefined}\r\n   */\r\n  error = (error, info = null) => {\r\n    info = (error.stack || info) || null\r\n\r\n    console.error(error.message, info)\r\n    return this.setState({ error, info })\r\n  }\r\n\r\n  /**\r\n   * Updates the internal loading state.\r\n   *\r\n   * @param {boolean} loading - True if fetching content, false otherwise\r\n   * @returns {boolean} @see @param loading\r\n   */\r\n  fetch = loading => this.setState({ loading }, () => loading)\r\n\r\n  /**\r\n   * If @see @param deck_id is defined, the method will update the internal\r\n   * state with new slide and ticker data when changes are detected in the\r\n   * dbktv-decks database.\r\n   *\r\n   * If undefined, the method will update the internal state the new deck id.\r\n   * The method will then call @see @method App#sync to fetch the new slide and\r\n   * ticker data and update the internal state.\r\n   *\r\n   * @param {string} deck_id - Id of deck to watch for changes\r\n   * @returns {object | string} New deck data or deck id\r\n   */\r\n  subscribe = deck_id => {\r\n    const { data, id } = this.subscriptions\r\n\r\n    try {\r\n      const subscription = deck_id ? data(deck_id) : id\r\n      subscription.on('value', snapshot => {\r\n        snapshot = snapshot.val()\r\n\r\n        if (deck_id) {\r\n          const { slides, ticker } = snapshot\r\n\r\n          return this.setState({ slides, ticker }, () => {\r\n            console.info('SUBSCRIPTION - NEW DATA DETECTED ->', snapshot)\r\n            return snapshot\r\n          })\r\n        } else {\r\n          const { deck } = this.state\r\n\r\n          return this.setState({ deck: snapshot }, async () => {\r\n            if (deck && deck !== snapshot) {\r\n              console.info('SUBSCRIPTION - NEW ID DETECTED ->', deck, snapshot)\r\n              return this.sync()\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } catch (err) {\r\n      this.error(new GeneralError(`SUBSCRIPTION ERR -> ${err.message}`))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the internal state with id of the current deck, slide data, and\r\n   * ticker data.\r\n   *\r\n   * @async\r\n   * @returns {Promise<object>} Id of the current deck, slides, and ticker data\r\n   */\r\n  sync = async () => {\r\n    this.fetch(true)\r\n    console.warn('SYNC - STARTING')\r\n\r\n    let deck = null\r\n\r\n    /*\r\n     * Retreive the id of the current deck data.\r\n     * A GeneralError will be thrown if we can't get the id from Firebase.\r\n     * A NotFound error will be thrown if the deck id doesn't exist.\r\n     */\r\n\r\n    try {\r\n      deck = (await this.subscriptions.id.once('value')).val()\r\n      if (!deck) throw new NotFound('SYNC ERR - DECK ID DOES NOT EXIST')\r\n    } catch (err) {\r\n      if (err.name === 'NotFound') this.error(err)\r\n      err.message = `SYNC ERR - CANNOT GET DECK ID -> ${err.message}`\r\n      this.error(new GeneralError(err))\r\n    }\r\n\r\n    console.info('SYNC - RETREIVED DECK ID ->', deck)\r\n\r\n    /*\r\n     * Retreive the deck data from the decks database.\r\n     * A GeneralError will be thrown if we're unable to get the data.\r\n     */\r\n\r\n    try {\r\n      const { data } = this.subscriptions\r\n      let { slides, ticker } = (await data(deck).once('value')).val()\r\n\r\n      this.setState({ deck, loading: false, slides, ticker }, () => {\r\n        console.info('SYNC - RETREIVED DECK DATA ->', { slides, ticker })\r\n        return { deck, slides, ticker }\r\n      })\r\n    } catch (err) {\r\n      err.message = `SYNC ERR - CANNOT GET DECK DATA -> ${err.message}`\r\n      this.error(new GeneralError(err))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepares @see @param slides to be parsed as dual slide and route objects.\r\n   *\r\n   * @param {object[]} slides - Array to slides to sanitize\r\n   * @returns {object[]} - Routified slide objects\r\n   */\r\n  routing = slides => {\r\n    const patherize = text => text.toLowerCase().replace(/ /g, '-').replace(/[-]+/g, '-').replace(/[^\\w-]+/g, '')\r\n\r\n    return slides.map((slide, i) => {\r\n      const { component, content } = slide\r\n\r\n      slide.next = { id: i === slides.length - 1 ? 0 : i + 1 }\r\n\r\n      switch (component) {\r\n        case 'Articles':\r\n          const { articles } = content\r\n          slide.path = `/articles/${patherize(articles[0].headline.text)}`\r\n          break\r\n        case 'Multimedia':\r\n          const { alt, caption, video } = content.media\r\n          slide.path = `/multimedia/${patherize(video ? caption : alt)}`\r\n          break\r\n        case 'News':\r\n          const { headline } = content\r\n          slide.path = `/news/${patherize(headline.text)}`\r\n          break\r\n        default:\r\n          slide.path = `/default`\r\n      }\r\n\r\n      return slide\r\n    })\r\n  }\r\n\r\n  /**\r\n   * In a production Node environment, Google Analytics and Pageview tracking\r\n   * will be initialized.\r\n   *\r\n   * @returns {boolean} True if production Node environment and Google Analytics\r\n   * was successfully initialized\r\n   */\r\n  tracking = () => {\r\n    let analytics = false\r\n\r\n    if (this.env === 'production') {\r\n      const { pathname, search } = window.location\r\n\r\n      // Initialize Google Analytics and pageview tracking\r\n      ReactGA.initialize(...this.analytics)\r\n      ReactGA.pageview(pathname + search)\r\n\r\n      analytics = true\r\n    }\r\n\r\n    return this.setState({ analytics }, () => analytics)\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","// Packages\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// Compiled Sass stylesheet\r\nimport './sass/app.sass'\r\n\r\n// Firebase\r\nimport { database, storage } from './api'\r\n\r\n// Application\r\nimport App from './components/App'\r\n\r\n// Service worker\r\nimport * as sw from './config/sw.config'\r\n\r\n/**\r\n * @file Application entry point\r\n *\r\n * @todo Slide HOC\r\n *\r\n * @author Lexus Drumgold <lex@lexusdrumgold.design>\r\n */\r\n\r\n// Application will be rendered inside of <div id=\"root\"></div>\r\n// with the Firebase database and storage interfaces passed as props\r\nReactDOM.render(\r\n  <App database={database} storage={storage} />,\r\n  document.getElementById('root')\r\n)\r\n\r\n/**\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * @see {@link https://bit.ly/CRA-PWA}\r\n */\r\nsw.unregister()\r\n"],"sourceRoot":""}